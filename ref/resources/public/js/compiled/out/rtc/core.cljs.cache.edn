;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name rtc.core, :imports nil, :requires {signal rtc.signaling, rtc.signaling rtc.signaling}, :uses nil, :defs {app-state {:name rtc.core/app-state, :file "src/rtc/core.cljs", :line 8, :column 1, :end-line 8, :end-column 19, :meta {:file "/Users/allanjiang/Developer/servicedesk/webrtcljs/src/rtc/core.cljs", :line 8, :column 10, :end-line 8, :end-column 19}}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/allanjiang/Developer/servicedesk/webrtcljs/src/rtc/core.cljs", :line 10, :column 7, :end-line 10, :end-column 19, :arglists (quote ([]))}, :name rtc.core/on-js-reload, :variadic false, :file "src/rtc/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:text}, :order [:text]}, :doc nil}